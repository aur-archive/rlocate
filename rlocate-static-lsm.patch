--- src/rlocate-module/rlocate.c.orig	2007-08-15 11:57:33.000000000 +0300
+++ src/rlocate-module/rlocate.c	2008-02-13 21:43:58.000000000 +0200
@@ -989,6 +989,7 @@ static int __init init_rlocate(void)
         if (ret)
                 goto out;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
         // register as security module
         ret = register_security( &rlocate_security_ops );
         if ( ret ) {
@@ -1000,6 +1001,7 @@ static int __init init_rlocate(void)
                 }
                 mod_register = 1;
         }
+#endif
         if ((path_buffer = kmalloc( PATH_MAX + 8, GFP_KERNEL )) == NULL) {
                 printk (KERN_ERR "rlocate: __get_free_page failed\n");
                 ret = -ENOMEM;
@@ -1042,10 +1044,12 @@ no_starting_path_arg:
 no_exclude_dir_arg:
         kfree(path_buffer); 
 no_path_buffer:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
         if ( mod_register ) 
                 mod_unreg_security(DEVICE_NAME, &rlocate_security_ops);
         else
                 unregister_security(&rlocate_security_ops);
+#endif
 no_lsm:
         rlocate_dev_unregister();
 out:
@@ -1063,6 +1067,7 @@ static void __exit exit_rlocate(void)
         free_page( (unsigned long)STARTING_PATH_ARG);
         free_page( (unsigned long)EXCLUDE_DIR_ARG);
         kfree(path_buffer); 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
         if ( mod_register ) {
 		if (mod_unreg_security(DEVICE_NAME, &rlocate_security_ops)) 
                         printk(KERN_INFO "rlocate: failed to unregister "
@@ -1071,7 +1076,7 @@ static void __exit exit_rlocate(void)
 	} else if (unregister_security(&rlocate_security_ops)) 
                         printk(KERN_INFO "rlocate: failed to unregister "
 					 "rlocate security module.\n");
-        
+#endif  
         rlocate_dev_unregister();
   	printk(KERN_INFO "rlocate: unloaded\n");
 }
